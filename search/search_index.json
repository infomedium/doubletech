{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"commands-linux/","title":"Linux Commands","text":""},{"location":"commands-linux/#operating-system","title":"Operating System","text":""},{"location":"commands-linux/#hardware","title":"Hardware","text":""},{"location":"commands-linux/#cpu","title":"CPU","text":"<pre><code># Show CPU information\nlscpu\n\n# Get information from file\ncat /proc/cpuinfo\n\n# Show number of processors\nnproc\n</code></pre>"},{"location":"commands-linux/#memory","title":"Memory","text":"<pre><code># Display amount of free and used memory in the system\nfree -g -h -t\n\n# Get information from file\ncat /proc/meminfo\n</code></pre>"},{"location":"commands-linux/#disk","title":"Disk","text":"<pre><code># Get disk-level space usage [High Level]\ndf -h --total\n\n# Get details on specific mount point\ndf -h /\n\n# Get folder-level space usage [Low Level]\ndu -sh /tmp\n# 676M    /tmp\n</code></pre>"},{"location":"commands-linux/#general","title":"General","text":"<pre><code># Show system information\n# -a: all\nuname -a\n\n# Get machine hardware name\narch\n</code></pre>"},{"location":"commands-linux/#tasks","title":"Tasks","text":"<pre><code># Display information about the CPU architecture\ntop\n\n# interactive process viewer\nhtop\n</code></pre>"},{"location":"commands-linux/#user-management","title":"User Management","text":"<pre><code># List all users\ncat /etc/passwd\n</code></pre>"},{"location":"commands-linux/#file-operations","title":"File Operations","text":"<pre><code># Delete folder recursively\n# -r :recursive\n# -f :force (no prompt)\nrm -r temp1/\nrm -rf temp1/\n</code></pre>"},{"location":"gh-pages/","title":"Publish Static Websites","text":""},{"location":"gh-pages/#1-prerequisites","title":"1. Prerequisites","text":""},{"location":"gh-pages/#11-python","title":"1.1. <code>Python</code>","text":"<ul> <li> <p>If installed, skip next steps:</p> <pre><code>python --version\n# Python 3.10.11\n</code></pre> </li> <li> <p>From Microsoft store, install python (e.g. <code>Python 3.10</code>)</p> </li> <li> <p>Open new terminal and check for python version. If not found, then add the following value to <code>PATH</code> environment variable. Refer Appendix #2.</p> Env Variable Name Value <code>PATH</code> <code>%USERPROFILE%\\AppData\\Local\\Microsoft\\WindowsApps</code> </li> <li> <p>Repeat step for verification.</p> </li> </ul>"},{"location":"gh-pages/#12-git","title":"1.2. <code>Git</code>","text":"<ul> <li> <p>If installed, skip next steps:</p> <pre><code>git --version\n# git version 2.6.4.windows.1\n</code></pre> </li> </ul>"},{"location":"gh-pages/#13-github-pat","title":"1.3. GitHub <code>PAT</code>","text":"<ul> <li>Follow instructions to generate a new <code>Personal Access Token</code>.</li> <li>Save the <code>PAT</code> in a secure location.    </li> </ul>"},{"location":"gh-pages/#2-server-setup","title":"2. Server Setup","text":""},{"location":"gh-pages/#21-create-a-new-repository","title":"2.1. Create a new repository","text":"<ul> <li>Repo Name: <code>somesite</code></li> <li>Visibility: <code>Public</code></li> <li>Add a <code>README</code> file</li> <li>Add a <code>.gitignore</code> file with template as <code>python</code></li> </ul>"},{"location":"gh-pages/#22-create-a-new-branch","title":"2.2. Create a new branch","text":"<ul> <li>Branch Name: <code>gh-pages</code></li> </ul>"},{"location":"gh-pages/#23-verify-publish-status","title":"2.3. Verify publish status","text":"<ul> <li>After branch is created, in a few minutes, the <code>Deployments</code> will show green tick.</li> <li>Navigate to <code>Settings &gt; Pages</code></li> <li>Click on site url at top of page to view published page.</li> </ul>"},{"location":"gh-pages/#3-client-setup","title":"3. Client Setup","text":""},{"location":"gh-pages/#31-create-virtual-environment","title":"3.1. Create Virtual Environment","text":"<pre><code>mkdir E:\\ENV\\VENV &amp; cd E:\\ENV\\VENV\npython -m venv .mkdocs-py-310\n</code></pre> <p>Note</p> <p>A virtual environment in a common directory allows for reuse across multiple python projects.</p>"},{"location":"gh-pages/#32-install-packages","title":"3.2. Install packages","text":"<pre><code>E:\\ENV\\VENV\\.mkdocs-py-310\\Scripts\\activate.bat\npython -m pip install --upgrade pip\npip install mkdocs-material\n</code></pre>"},{"location":"gh-pages/#33-create-project-folder","title":"3.3. Create Project Folder","text":"<pre><code>mkdir E:\\GITHUB\\somesite\ncd E:\\GITHUB\\somesite\n</code></pre>"},{"location":"gh-pages/#34-clone-repo","title":"3.4. Clone repo","text":"<pre><code>git clone https://github.com/someone/somesite.git --branch main main\ngit clone https://github.com/someone/somesite.git --branch gh-pages gh-pages\n</code></pre>"},{"location":"gh-pages/#35-create-new-website","title":"3.5. Create new website","text":"<pre><code>cd main\nmkdocs new . \n# INFO    -  Writing config file: .\\mkdocs.yml\n# INFO    -  Writing initial docs: .\\docs\\index.md\n</code></pre>"},{"location":"gh-pages/#36-modify-config","title":"3.6. Modify config","text":"<pre><code>site_name: My Docs\ntheme:\n  name: material\nsite_dir: ../gh-pages\n</code></pre>"},{"location":"gh-pages/#37-build-website","title":"3.7. Build website","text":"<pre><code>cd E:\\GITHUB\\somesite\\main\nmkdocs build\n</code></pre>"},{"location":"gh-pages/#38-commit-changes","title":"3.8. Commit changes","text":"<p>NOTE: Ensure email address is updated to proxy in each GH repo.    Refer Appendix #4</p> <pre><code>cd gh-pages\ngid add *\ngit commit -a -m \"my new changes\"\n</code></pre>"},{"location":"gh-pages/#39-publish-website","title":"3.9. Publish website","text":"<pre><code>cd gh-pages\ngit push\n# Username for 'https://github.com': someone\n# Password for 'https://someone@github.com':\n</code></pre>"},{"location":"gh-pages/#310-verify-changes","title":"3.10. Verify Changes","text":"<ul> <li>Launch website https://someone.github.io/somesite/ and verify changes manually.</li> </ul>"},{"location":"gh-pages/#4-create-workspace","title":"4. Create Workspace","text":""},{"location":"gh-pages/#41-project-file","title":"4.1. Project file","text":"<ul> <li> <p>Save below as <code>project.code-workspace</code> file. E.g. <code>E:\\GITHUB\\somesite\\project.code-workspace</code></p> <pre><code>{\n    \"folders\": [\n        {\n            \"path\": \".\"\n        }\n    ],\n    \"settings\": {\n        \"editor.formatOnSave\": true,\n        \"files.exclude\": {\n            \"**/.git\": true,\n            \"**/.svn\": true,\n            \"**/.vscode\": true,\n            \"**/__pycache__\": true,\n            \"**/.pytest_cache\": true,\n            \"**/.venv\": true\n        },\n    },\n    \"launch\": {\n        \"configurations\": [],\n        \"compounds\": []\n    }\n}\n</code></pre> </li> <li> <p>Double click on workspace file to open VS Code.</p> </li> <li>Launch terminal within VS Code.</li> </ul>"},{"location":"gh-pages/#_1","title":"Publish Static Websites","text":""},{"location":"gh-pages/#5-appendix","title":"5. APPENDIX","text":""},{"location":"gh-pages/#1-how-to-check-where-python-is-installed","title":"1. How to check where python is installed?","text":"<ul> <li>Launch python from start menu icon.</li> <li>Run below code:</li> </ul> <pre><code>import sys\nsys.executable\n# 'C:\\\\Users\\\\XXX\\\\AppData\\\\Local\\\\Microsoft\\\\WindowsApps\\\\python.exe'\n</code></pre>"},{"location":"gh-pages/#2-how-to-add-a-new-environment-variable","title":"2. How to add a new environment variable?","text":"Variable Name Value <code>MY_KEY</code> <code>MY_VALUE</code> <p>Permanent: - In Windows Search, type <code>Edit environment variables for your account</code> . - In popup window, click on <code>New...</code> or <code>Edit..</code> and update as required.</p> <p>Current Session Only: </p> <ul> <li>To add a new name-value pair:</li> </ul> <pre><code>SET MY_KEY=MY_VALUE\n</code></pre> <ul> <li>To append to existing value if variable name already exists:</li> </ul> <pre><code>SET %MY_KEY%=%MY_VALUE%;%MY_KEY%\n</code></pre>"},{"location":"gh-pages/#3-how-to-check-path-of-virtual-environment","title":"3. How to check path of virtual environment?","text":"<pre><code>python -m pipenv --venv\n# E:\\ENV\\PIPENV\\main-6aBuroLU`\n</code></pre>"},{"location":"gh-pages/#4-how-to-update-proxy-email-id-before-local-commit","title":"4. How to update proxy email id before local commit?","text":"<p>Ref: setting-your-commit-email-address</p> <p>The below step is important to avoid exposing real email address in GH repo to the public.</p> <pre><code>cd \"&lt;folder containing .git folder&gt;\"\ngit config --local user.email \"&lt;private email-id from GH portal e.g. 123+someone@users.noreply.github.com\"\ngit config --local user.name \"&lt;user name e.g. someone&gt;\"\n</code></pre>"},{"location":"gh-pages/#5-how-to-view-git-configuration-changes","title":"5. How to view git configuration changes?","text":"<p>Run below command to see configurations at different level</p> <pre><code>git config --local --list\n# core.repositoryformatversion=0\n# core.filemode=false\n</code></pre> <pre><code>git config --system --list\n# core.symlinks=false\n# core.autocrlf=true\n</code></pre> <pre><code>git config --global --list\n# filter.lfs.required=true\n# filter.lfs.clean=git-lfs clean -- %f\n</code></pre>"},{"location":"package-manager-linux/","title":"Linux Package Managers","text":""},{"location":"package-manager-linux/#types","title":"Types","text":"<pre><code>*.deb file\n    Debian-based systems\n        Debian\n        Kali\n        Ubuntu      \n    dpkg (Debian Package) (1994)\n        &gt; dpkg &lt;options&gt; actions\n        - low-level utility\n    apt-get (APT package handling utility) (1998)\n        &gt; apt-get [options]\n    apt (Advanced Package Tool) (2014)\n        &gt; apt &lt;options&gt; actions\n        - high-level utility\n        - default package manager tool\n\n*.rpm file  \n    RedHat-based systems\n        CentOS\n        Fedora\n        RHEL\n    rpm (Red hat Package Manager) (1997)\n        &gt; rpm &lt;options&gt; actions\n        - low-level utility\n    yum (Yellowdog Updater Modified) (2002)\n        &gt; yum [options] [command] [package(s)]\n        - high-level utility\n    dnf (Dandified YUM) (2012)\n        &gt; dnf [options] &lt;command&gt; [&lt;args&gt;...]\n        - successor to YUM\n        - available starting from RHEL 8\n</code></pre>"},{"location":"package-manager-linux/#useful-commands-high-level","title":"Useful commands - high Level","text":"S# Info <code>apt</code> <code>yum</code> <code>dnf</code> 1 Fetches the list of available updates <code>sudo apt update</code> <code>apt list --upgradable</code> <code>yum check-update</code> <code>yum update</code> ? <code>dnf list updates</code> 2 Installs some updates; does not remove packages <code>sudo apt upgrade</code> <code>yum upgrade</code> <code>dnf upgrade</code> 3 Installs updates; may also remove some packages, if needed <code>sudo apt full-upgrade</code> 4 Removes any old packages that are no longer needed <code>sudo apt autoremove</code> <code>sudo yum autoremove</code> <code>sudo dnf autoremove</code> 5 Search in package description <code>apt search &lt;text to search e.g. &gt;</code> <code>yum search &lt;text to search e.g. &gt;</code> <code>dnf search &lt;text to search e.g. &gt;</code> 6 Show details of a package <code>apt show &lt;package name e.g. npm&gt;</code> <code>yum info &lt;package name e.g. npm&gt;</code> <code>dnf info &lt;package name e.g. npm&gt;</code> Show changelog of a package <code>apt changelog &lt;package name e.g. npm&gt;</code> <code>yum changelog &lt;package name e.g. npm&gt;</code> <code>dnf changelog &lt;package name e.g. npm&gt;</code> 7 List packages with matching name <code>apt list &lt;package name e.g. npm*&gt;</code> <code>yum list &lt;package name e.g. npm*&gt;</code> <code>dnf list &lt;package name e.g. npm*&gt;</code> List packages which are installed <code>apt list --installed</code> <code>yum list --installed</code> <code>dnf list --installed</code> 8 Install a package <code>sudo apt install &lt;package name e.g. npm&gt;</code> <code>sudo yum install &lt;package name e.g. npm&gt;</code> <code>sudo dnf install &lt;package name e.g. npm&gt;</code> 9 Reinstall a package <code>sudo apt reinstall &lt;package name e.g. npm&gt;</code> <code>sudo yum reinstall &lt;package name e.g. npm&gt;</code> <code>sudo dnf reinstall &lt;package name e.g. npm&gt;</code> 10 Remove a package <code>sudo apt remove &lt;package name e.g. npm&gt;</code> <code>sudo yum remove &lt;package name e.g. npm&gt;</code> <code>sudo dnf remove &lt;package name e.g. npm&gt;</code> 11 Show transaction history <code>cat /var/log/apt/history.log</code> <code>yum history</code> <code>dnf history</code> 12 Rollback <code>yum history rollback &lt;ID&gt;</code> <code>dnf history rollback &lt;ID&gt;</code>"},{"location":"package-manager-linux/#useful-commands-low-level","title":"Useful commands - low level","text":"S# Info <code>dpkg</code> <code>rpm</code> 1 List files of package installed <code>dpkg --listfiles &lt;package name e.g. npm&gt;</code> <code>rpm -ql &lt;package name e.g. npm&gt;</code>"},{"location":"package-manager-linux/#appendix","title":"Appendix","text":""},{"location":"package-manager-linux/#does-apt-autoremove-remove-all-the-unused-packages","title":"Does <code>apt autoremove</code> remove all the unused packages?","text":"<pre><code>apt list --installed | wc -l\n# 983\n\nsudo apt install vlc\n\napt list --installed | wc -l\n# 1162\n\nsudo apt remove vlc\n\napt list --installed | wc -l\n# 1161\n\nsudo apt autoremove\n\napt list --installed | wc -l\n# 984\n</code></pre>"},{"location":"package-manager-linux/#reference","title":"Reference","text":"<ul> <li>https://aws.amazon.com/compare/the-difference-between-apt-and-apt-get</li> <li>https://www.tecmint.com/redhat-vs-debian</li> <li>https://www.redhat.com/en/interactive-labs</li> </ul>"}]}